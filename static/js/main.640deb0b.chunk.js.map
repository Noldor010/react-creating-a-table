{"version":3,"sources":["components/ReadOnlyRow.js","components/EditableRow.js","App.js","index.js"],"names":["ReadOnlyRow","contact","handleEditClick","handleDeleteClick","fullName","address","phoneNumber","email","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","required","placeholder","name","value","onChange","App","useState","data","contacts","setContacts","addFormData","setAddFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","formValues","contactId","newContacts","index","findIndex","splice","className","onSubmit","editedContact","map","newContact","nanoid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAwBeA,EAtBK,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,QAASC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBAC/C,OACE,+BACE,6BAAKF,EAAQG,WACb,6BAAKH,EAAQI,UACb,6BAAKJ,EAAQK,cACb,6BAAKL,EAAQM,QACb,+BACE,wBACEC,KAAK,SACLC,QAAS,SAACC,GAAD,OAAWR,EAAgBQ,EAAOT,IAF7C,kBAMA,wBAAQO,KAAK,SAASC,QAAS,kBAAMN,EAAkBF,EAAQU,KAA/D,2BC2COC,EAzDK,SAAC,GAId,IAHLC,EAGI,EAHJA,aACAC,EAEI,EAFJA,qBACAC,EACI,EADJA,kBAEA,OACE,+BACE,6BACE,uBACEP,KAAK,OACLQ,SAAS,WACTC,YAAY,kBACZC,KAAK,WACLC,MAAON,EAAaT,SACpBgB,SAAUN,MAGd,6BACE,uBACEN,KAAK,OACLQ,SAAS,WACTC,YAAY,sBACZC,KAAK,UACLC,MAAON,EAAaR,QACpBe,SAAUN,MAGd,6BACE,uBACEN,KAAK,OACLQ,SAAS,WACTC,YAAY,0BACZC,KAAK,cACLC,MAAON,EAAaP,YACpBc,SAAUN,MAGd,6BACE,uBACEN,KAAK,QACLQ,SAAS,WACTC,YAAY,oBACZC,KAAK,QACLC,MAAON,EAAaN,MACpBa,SAAUN,MAGd,+BACE,wBAAQN,KAAK,SAAb,kBACA,wBAAQA,KAAK,SAASC,QAASM,EAA/B,2BCuIOM,EAnLH,WACV,MAAgCC,mBAASC,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsCH,mBAAS,CAC7ClB,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,MAAO,KAJT,mBAAOmB,EAAP,KAAoBC,EAApB,KAOA,EAAwCL,mBAAS,CAC/ClB,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,MAAO,KAJT,mBAAOM,EAAP,KAAqBe,EAArB,KAOA,EAA0CN,mBAAS,MAAnD,mBAAOO,EAAP,KAAsBC,EAAtB,KAEMC,EAAsB,SAACrB,GAC3BA,EAAMsB,iBAEN,IAAMC,EAAYvB,EAAMwB,OAAOC,aAAa,QACtCC,EAAa1B,EAAMwB,OAAOf,MAE1BkB,EAAW,eAAQX,GACzBW,EAAYJ,GAAaG,EAEzBT,EAAeU,IAGXvB,EAAuB,SAACJ,GAC5BA,EAAMsB,iBAEN,IAAMC,EAAYvB,EAAMwB,OAAOC,aAAa,QACtCC,EAAa1B,EAAMwB,OAAOf,MAE1BkB,EAAW,eAAQxB,GACzBwB,EAAYJ,GAAaG,EAEzBR,EAAgBS,IAwCZnC,EAAkB,SAACQ,EAAOT,GAC9BS,EAAMsB,iBACNF,EAAiB7B,EAAQU,IAEzB,IAAM2B,EAAa,CACjBlC,SAAUH,EAAQG,SAClBC,QAASJ,EAAQI,QACjBC,YAAaL,EAAQK,YACrBC,MAAON,EAAQM,OAGjBqB,EAAgBU,IAGZvB,EAAoB,WACxBe,EAAiB,OAGb3B,EAAoB,SAACoC,GACzB,IAAMC,EAAW,YAAOhB,GAElBiB,EAAQjB,EAASkB,WAAU,SAACzC,GAAD,OACjCA,EAAQU,KAAO4B,KAEfC,EAAYG,OAAOF,EAAO,GAE1BhB,EAAYe,IAGd,OACE,sBAAKI,UAAU,gBAAf,UACE,sBAAMC,SArDmB,SAACnC,GAC5BA,EAAMsB,iBAEN,IAAMc,EAAgB,CACpBnC,GAAIkB,EACJzB,SAAUS,EAAaT,SACvBC,QAASQ,EAAaR,QACtBC,YAAaO,EAAaP,YAC1BC,MAAOM,EAAaN,OAGhBiC,EAAW,YAAOhB,GAKxBgB,EAHchB,EAASkB,WAAU,SAACzC,GAAD,OACjCA,EAAQU,KAAOkB,MAEMiB,EAErBrB,EAAYe,GACZV,EAAiB,OAkCf,SACE,kCACE,gCACE,+BACE,sCACA,yCACA,8CACA,uCACA,8CAGJ,gCACGN,EAASuB,KAAI,SAAC9C,GAAD,OACZ,cAAC,WAAD,UACG4B,IAAkB5B,EAAQU,GACzB,cAAC,EAAD,CACEE,aAAcA,EACdC,qBAAsBA,EACtBC,kBAAmBA,IAGrB,cAAC,EAAD,CACEd,QAASA,EACTC,gBAAiBA,EACjBC,kBAAmBA,gBASjC,+CACA,uBAAM0C,SAtGkB,SAACnC,GAC3BA,EAAMsB,iBAEN,IAAMgB,EAAa,CACjBrC,GAAIsC,cACJ7C,SAAUsB,EAAYtB,SACtBC,QAASqB,EAAYrB,QACrBC,YAAaoB,EAAYpB,YACzBC,MAAOmB,EAAYnB,OAGfiC,EAAW,sBAAOhB,GAAP,CAAiBwB,IAClCvB,EAAYe,IA0FV,UACE,uBACEhC,KAAK,OACLU,KAAK,WACLF,SAAS,WACTC,YAAY,kBACZG,SAAUW,IAEZ,uBACEvB,KAAK,OACLU,KAAK,UACLF,SAAS,WACTC,YAAY,qBACZG,SAAUW,IAEZ,uBACEvB,KAAK,OACLU,KAAK,cACLF,SAAS,WACTC,YAAY,0BACZG,SAAUW,IAEZ,uBACEvB,KAAK,QACLU,KAAK,QACLF,SAAS,WACTC,YAAY,oBACZG,SAAUW,IAEZ,wBAAQvB,KAAK,SAAb,wBC/KR0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.640deb0b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\r\n  return (\r\n    <tr>\r\n      <td>{contact.fullName}</td>\r\n      <td>{contact.address}</td>\r\n      <td>{contact.phoneNumber}</td>\r\n      <td>{contact.email}</td>\r\n      <td>\r\n        <button\r\n          type=\"button\"\r\n          onClick={(event) => handleEditClick(event, contact)}\r\n        >\r\n          Edit\r\n        </button>\r\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;\r\n","import React from \"react\";\r\n\r\nconst EditableRow = ({\r\n  editFormData,\r\n  handleEditFormChange,\r\n  handleCancelClick,\r\n}) => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a name...\"\r\n          name=\"fullName\"\r\n          value={editFormData.fullName}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an address...\"\r\n          name=\"address\"\r\n          value={editFormData.address}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a phone number...\"\r\n          name=\"phoneNumber\"\r\n          value={editFormData.phoneNumber}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <input\r\n          type=\"email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an email...\"\r\n          name=\"email\"\r\n          value={editFormData.email}\r\n          onChange={handleEditFormChange}\r\n        ></input>\r\n      </td>\r\n      <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>\r\n          Cancel\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default EditableRow;\r\n","import React, { useState, Fragment } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport \"./App.css\";\r\nimport data from \"./mock-data.json\";\r\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\r\nimport EditableRow from \"./components/EditableRow\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(data);\r\n  const [addFormData, setAddFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    fullName: \"\",\r\n    address: \"\",\r\n    phoneNumber: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const [editContactId, setEditContactId] = useState(null);\r\n\r\n  const handleAddFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...addFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setAddFormData(newFormData);\r\n  };\r\n\r\n  const handleEditFormChange = (event) => {\r\n    event.preventDefault();\r\n\r\n    const fieldName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[fieldName] = fieldValue;\r\n\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const handleAddFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newContact = {\r\n      id: nanoid(),\r\n      fullName: addFormData.fullName,\r\n      address: addFormData.address,\r\n      phoneNumber: addFormData.phoneNumber,\r\n      email: addFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts, newContact];\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  const handleEditFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const editedContact = {\r\n      id: editContactId,\r\n      fullName: editFormData.fullName,\r\n      address: editFormData.address,\r\n      phoneNumber: editFormData.phoneNumber,\r\n      email: editFormData.email,\r\n    };\r\n\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => \r\n    contact.id === editContactId);\r\n\r\n    newContacts[index] = editedContact;\r\n\r\n    setContacts(newContacts);\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleEditClick = (event, contact) => {\r\n    event.preventDefault();\r\n    setEditContactId(contact.id);\r\n\r\n    const formValues = {\r\n      fullName: contact.fullName,\r\n      address: contact.address,\r\n      phoneNumber: contact.phoneNumber,\r\n      email: contact.email,\r\n    };\r\n\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setEditContactId(null);\r\n  };\r\n\r\n  const handleDeleteClick = (contactId) => {\r\n    const newContacts = [...contacts];\r\n\r\n    const index = contacts.findIndex((contact) => \r\n    contact.id === contactId);\r\n\r\n    newContacts.splice(index, 1);\r\n\r\n    setContacts(newContacts);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <form onSubmit={handleEditFormSubmit}>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Address</th>\r\n              <th>Phone Number</th>\r\n              <th>Email</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <Fragment>\r\n                {editContactId === contact.id ? (\r\n                  <EditableRow\r\n                    editFormData={editFormData}\r\n                    handleEditFormChange={handleEditFormChange}\r\n                    handleCancelClick={handleCancelClick}\r\n                  />\r\n                ) : (\r\n                  <ReadOnlyRow\r\n                    contact={contact}\r\n                    handleEditClick={handleEditClick}\r\n                    handleDeleteClick={handleDeleteClick}\r\n                  />\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </form>\r\n\r\n      <h2>Add a Contact</h2>\r\n      <form onSubmit={handleAddFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"fullName\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a name...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an addres...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"phoneNumber\"\r\n          required=\"required\"\r\n          placeholder=\"Enter a phone number...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          required=\"required\"\r\n          placeholder=\"Enter an email...\"\r\n          onChange={handleAddFormChange}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}